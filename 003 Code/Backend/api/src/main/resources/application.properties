# env
spring.profiles.include=env

# DB
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${my.mysqluri_local}
spring.datasource.username=${my.mysqlUsername}
spring.datasource.password=${my.mysqlPassword}

# data.sql
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.jpa.open-in-view=false

spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

#logging
logging.level.root=info

# Redis
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Keycloak
my.keycloak.host = localhost:8081
my.keycloak.realm_name = keycloakTest
my.keycloak.client_id = test-app
#---
spring.config.activate.on-profile=prod
# DB
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${my.mysqluri_docker}
spring.datasource.username=${my.mysqlUsername}
spring.datasource.password=${my.mysqlPassword}

# data.sql
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=true
spring.jpa.open-in-view=false

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# spring security
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# logging
logging.level.root=error

# Redis
spring.cache.type=redis
spring.data.redis.host=db-redis
spring.data.redis.port=6379

# Keycloak
my.keycloak.host = kjj.kjj.r-e.kr:8081
my.keycloak.realm_name = test-app
my.keycloak.client_id = test-client